version: '3.8'

services:
  web:
    build:
      context: ./src
      dockerfile: Dockerfile.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db

  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - 1338:1338
    depends_on:
      - web


  redis:
    image: redis:6.2.6-alpine  # Add a Redis service for the message broker

  celery_worker:
    build:
      context: ./src
      dockerfile: Dockerfile
    command: celery -A config worker --loglevel=info
    volumes:
      - ./src/:/usr/src/src/
    env_file:
      - .env.prod
    depends_on:
      - redis
      - db

  celery_beat:
    build:
      context: ./src
      dockerfile: Dockerfile
    command: celery -A config beat --loglevel=info
    volumes:
      - ./src/:/usr/src/src/
    env_file:
      - .env.prod
    depends_on:
      - redis
      - db

  asgi:
    build:
      context: ./src
      dockerfile: Dockerfile
    command: daphne -b 0.0.0.0 -p 9001 -e ssl:9001:privateKey=/etc/letsencrypt/live/qadamavia.uz/privkey.pem:certKey=/etc/letsencrypt/live/qadamavia.uz/fullchain.pem config.asgi:application
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./src/:/usr/src/src/
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
    ports:
      - "9001:9001"


volumes:
  postgres_data:
  static_volume:
  media_volume:
